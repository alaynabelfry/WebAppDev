<?xml version='1.0' encoding='UTF-8' ?>

<ui:composition
        template="homepage.xhtml"
        xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
        xmlns:p="http://primefaces.org/ui"
        xmlns:ui="http://xmlns.jcp.org/jsf/facelets">
    <ui:define name="stylesheet"><link rel="stylesheet" type="text/css" href="map.css"></link></ui:define>
    <ui:define name="title">GeoSearchTest</ui:define>
    <ui:define name="content">
        <!--This panel is invisible and updates the xml for map markers when the search button is clicked-->
        <p:outputPanel id="mapScripts">
        <script>
          //<![CDATA[

          var infoWindow;
          var markers=[];
          var xml;

          /*loads initial map centered on Ottawa, a later feature could be to have it load based on user location*/
          function loadMap() {
            map = new google.maps.Map(document.getElementById('map'), {
              zoom: 8,
              center: {lat: 45.4214, lng: -75.6919}
            });
            infoWindow = new google.maps.InfoWindow();
            if(#{GeoSearchBean.markersXML!=null}){
                updateMap();
            }
          }

          function updateMap(){
              xml = parseXml('#{GeoSearchBean.markersXML}');
              alert('#{GeoSearchBean.markersXML}');
              clearLocations();
              var markerNodes = xml.documentElement.getElementsByTagName("marker");
              var bounds = new google.maps.LatLngBounds();
              for(var i=0;i<markerNodes.length;i++){
                  var name=markerNodes[i].getAttribute("name");
                  var address=markerNodes[i].getAttribute("address");
                  var latlng = new google.maps.LatLng(
                          parseFloat(markerNodes[i].getAttribute("lat")),
                          parseFloat(markerNodes[i].getAttribute("lng")));
                  createMarker(latlng, name, address);
                  bounds.extend(latlng);
              }
              map.fitBounds(bounds);
          }

          function createMarker(latlng, name, address) {
            var html = "<b>" + name + "</b> <br/>" + address;
            var marker = new google.maps.Marker({
              map: map,
              position: latlng
            });
            google.maps.event.addListener(marker, 'click', function() {
              infoWindow.setContent(html);
              infoWindow.open(map, marker);
            });
            markers.push(marker);
          }

          function clearLocations() {
            infoWindow.close();
            for (var i = 0; i < markers.length; i++) {
              markers[i].setMap(null);
            }
            markers.length = 0;
          }

          function parseXml(str) {
            return (new DOMParser).parseFromString(str, 'text/xml');
            }
          //]]>
        </script>
        </p:outputPanel>    
    <script src="https://maps.googleapis.com/maps/api/js?key=#{GeoSearchBean.key}&amp;callback=loadMap"
    async="async" defer="defer" type="text/javascript"></script>  
        <h:form>
            <p:panelGrid columns="2">
                <h:outputLabel for="latEntry" value="Latitude"/>
                <p:inputText id="latEntry" type="number" value="#{GeoSearchBean.latitude}"/>
                <h:outputLabel for="longEntry" value="Longitude"/>
                <p:inputText id="longEntry" type="number" value="#{GeoSearchBean.longitude}"/>
                <h:outputLabel for="longEntry" value="Address"/>
                <p:inputText id="addressEntry" type="address" value="#{GeoSearchBean.address}"/>
                <p:commandButton id="search" value="Search" action="#{GeoSearchBean.search()}" update="geoSearchResults mapScripts" oncomplete="updateMap()"/>
            </p:panelGrid>
            <div id="map" class="map"></div>
            <p:dataTable id="geoSearchResults" var="searchResults" value="#{GeoSearchBean.locations}">
                <p:column headerText="Distance (km)">
                    <h:outputText value="#{searchResults.distance}"/>
                </p:column>  
                <p:column headerText="Group Name">
                    <h:outputText value="#{searchResults.getGroupLocation().groups.groupname}"/>
                </p:column>  
                <p:column headerText="Address">
                    <h:outputText value="#{searchResults.getGroupLocation().address}"/>
                </p:column>
            </p:dataTable>   
        </h:form>
    </ui:define>
</ui:composition>

