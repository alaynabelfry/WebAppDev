<?xml version="1.0" encoding="UTF-8"?>
<ui:composition
    template="homepage.xhtml"
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:p="http://primefaces.org/ui"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets">
    <!--The Account creation page, check for empty fields, incorrect email format, and 
      existing usernames @ yawei-->
    <ui:define name="title">
        #{msg.AccountCreation}
    </ui:define>
    <ui:define name="content">
       <f:view locale="#{language.locale}"> <!--The view tag ensures the contained JSF components maintain correct I18n locale until user changes the locale @yawei-->
        <h:form>
            <!--replace the plain text labels with I18n property tags later-->
            <!--3 columns, the last column is for the message after the textbox-->
            <!--Email regrex obtained from http://regexlib.com/Search.aspx?k=email&AspxAutoDetectCookieSupport=1 -->
            <p:spacer height="20"/>
            <h2> #{msg.AccountCreation}</h2>   
                <h:panelGrid id="userCreationPanel" columns="3" cellpadding="5">                
                    <h:outputLabel for="usernameEntry" value="#{msg.enterUserName}:" />
                  <p:inputText id="usernameEntry" value="#{userName}" label="usernameEntry"  required="true"
                      requiredMessage="#{msg.userNameEntryErrorMessage}"/>
                  <h:message for="usernameEntry" style="color: red;"/>                           
                                        
                  <h:outputLabel for="passwordEntry" value="#{msg.enterPassword}:"/>
                  <p:password id="passwordEntry" value="#{password}" label="passwordEntry" required="true"
                              requiredMessage="#{msg.passwordEntryErrorMessage}"  match="passwordConfirm">
                    <!--using 'match' to validate password, part of primefaces-->
                  </p:password>
                  <h:message for="passwordEntry" style="color: red;"/>
                
                  <h:outputLabel for="passwordConfirm" value="#{msg.confirmPassword}:" />
                  <p:password id="passwordConfirm" value="#{passwordConfirm}" label="passwordConfirm" required="true"
                              requiredMessage="#{msg.confirmPasswordErrorMessage}"/>
                  <h:message for="passwordConfirm" style="color: red;"/>
                
                  <h:outputLabel for="emailEntry" value="#{msg.enterEmail}:" />
                  <p:inputText id="emailEntry" value="#{email}" label="emailEntry" required="true"
                               requiredMessage="#{msg.emailEntryErrorMessage}" 
                               validatorMessage="#{msg.emailFormatErrorMessage}">
                  <f:validateRegex pattern="^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$"/>
                  </p:inputText>
                  <h:message for="emailEntry" style="color: red;"/>
                             
                  <p:commandButton id="updateInfo" value="#{msg.accountCreateButton}" update="userCreationPanel" 
                             action="#{UsersView.addUser(userName, password, email)}"></p:commandButton>   
                             
                 <!--dialogs for success or failure -->
                 <p:dialog header="#{msg.accountCreationErrorDlgHeader}" widgetVar="signUpFailDlg" minHeight="60">
                     <h:outputText value="#{msg.accountExistDlgValue}"/>
                </p:dialog>
                 
                <p:dialog header="#{msg.accountCreationErrorDlgHeader}" widgetVar="emailFailDlg" minHeight="60">
                    <h:outputText value="#{msg.emailExistDlgValue}"/>
                </p:dialog>
        
                 <p:dialog header="#{msg.accountCreateSuccessDlgHeader}" widgetVar="signUpSuccessDlg" minHeight="60">
                   <h:outputText value="#{msg.accountCreateWelcomeDlgValue}"/>
               </p:dialog>               
            </h:panelGrid>           
        </h:form> 
        </f:view>
    </ui:define>
</ui:composition>
