package hibernate.dataobjects;
// Generated 24-Mar-2016 2:09:04 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Tags generated by hbm2java
 */
@Entity
@Table(name="tags"
    ,catalog="mydb"
    , uniqueConstraints = @UniqueConstraint(columnNames="tag_name") 
)
public class Tags  implements java.io.Serializable {


     private Integer tagId;
     private String tagName;
     private Set<Groups> groupses = new HashSet<Groups>(0);

    public Tags() {
    }

	
    public Tags(String tagName) {
        this.tagName = tagName;
    }
    public Tags(String tagName, Set<Groups> groupses) {
       this.tagName = tagName;
       this.groupses = groupses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="tag_id", unique=true, nullable=false)
    public Integer getTagId() {
        return this.tagId;
    }
    
    public void setTagId(Integer tagId) {
        this.tagId = tagId;
    }

    
    @Column(name="tag_name", unique=true, nullable=false, length=50)
    public String getTagName() {
        return this.tagName;
    }
    
    public void setTagName(String tagName) {
        this.tagName = tagName;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="groups_tags", catalog="mydb", joinColumns = { 
        @JoinColumn(name="tag_id_fk", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="group_id_fk", nullable=false, updatable=false) })
    public Set<Groups> getGroupses() {
        return this.groupses;
    }
    
    public void setGroupses(Set<Groups> groupses) {
        this.groupses = groupses;
    }




}


